parameters:
  - name: ARTIFACT_PREFIX
    type: string
    default: ''
  - name: VSCODE_ARCH
    type: string
    default: x64

steps:
  - task: DownloadPipelineArtifact@2
    inputs:
      artifactName: ${{ parameters.ARTIFACT_PREFIX }}vscode_client_win32_${{ parameters.VSCODE_ARCH }}_archive
      targetPath: $(Agent.TempDirectory)\vscode_client_archive

  - task: ExtractFiles@1
    inputs:
      archiveFilePatterns: '$(Agent.TempDirectory)\vscode_client_archive\*.zip'
      destinationFolder: $(Agent.BuildDirectory)\scanbin

  - powershell: yarn gulp 'vscode-symbols-win32-${{ parameters.VSCODE_ARCH }}'
    env:
      GITHUB_TOKEN: $(github-distro-mixin-password)
    displayName: Download Symbols

  - task: BinSkim@4
    inputs:
      InputType: "Basic"
      Function: "analyze"
      TargetPattern: "guardianGlob"
      AnalyzeIgnorePdbLoadError: true
      AnalyzeTargetGlob: '$(Agent.BuildDirectory)\scanbin\**.dll;$(Agent.BuildDirectory)\scanbin\**.exe;$(Agent.BuildDirectory)\scanbin\**.node'
      AnalyzeLocalSymbolDirectories: '$(Agent.BuildDirectory)\scanbin\VSCode-win32-${{ parameters.VSCODE_ARCH }}\pdb'

  - ${{ if eq(parameters.VSCODE_ARCH, 'x64') }}:
    - task: CopyFiles@2
      displayName: 'Collect Symbols for API Scan'
      inputs:
        SourceFolder: $(Agent.BuildDirectory)
        Contents: 'scanbin\**\*.pdb'
        TargetFolder: '$(Agent.BuildDirectory)\symbols'
        flattenFolders: true
      condition: succeeded()

    # - task: APIScan@2
    #   inputs:
    #     softwareFolder: $(Agent.BuildDirectory)\scanbin
    #     softwareName: 'vscode-client'
    #     softwareVersionNum: '1'
    #     symbolsFolder: 'SRV*http://symweb;$(Agent.BuildDirectory)\symbols'
    #     isLargeApp: false
    #     toolVersion: 'Latest'
    #   displayName: Run ApiScan
    #   condition: succeeded()
    #   env:
    #     AzureServicesAuthConnectionString: $(apiscan-connectionstring)

    - task: PublishSecurityAnalysisLogs@3
      inputs:
        ArtifactName: CodeAnalysisLogs
        ArtifactType: Container
        PublishProcessedResults: false
        AllTools: true
